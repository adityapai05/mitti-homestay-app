// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  firebaseUid String     @unique
  name        String
  email       String?    @unique
  phone       String?    @unique
  image       String?
  role        Role       @default(USER)
  isVerified  Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  bookings    Booking[]
  homestays   Homestay[] @relation("HomestayOwner")
  reviews     Review[]   // User can write many reviews
}

model Homestay {
  id             String     @id @default(uuid())
  ownerId        String
  name           String
  description    String
  address        String
  latitude       Float
  longitude      Float
  pricePerNight  Decimal
  beds           Int
  maxGuests      Int
  imageUrl       String
  amenities      String[]
  rating         Float      @default(0)
  guideAvailable Boolean    @default(false)
  guideFee       Decimal?
  checkInTime    String     @default("14:00") 
  checkOutTime   String     @default("11:00") 
  category       Category
  isVerified     Boolean    @default(false)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  owner          User       @relation("HomestayOwner", fields: [ownerId], references: [id])
  bookings       Booking[]
  reviews        Review[]   // Homestay can have many reviews
}

model Booking {
  id         String         @id @default(uuid())
  userId     String
  homestayId String
  checkIn    DateTime
  checkOut   DateTime
  guests     Int
  totalPrice Decimal
  status     BookingStatus  @default(PENDING)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  user       User           @relation(fields: [userId], references: [id])
  homestay   Homestay       @relation(fields: [homestayId], references: [id])
  review     Review?
}

model Review {
  id         String   @id @default(uuid())
  userId     String
  homestayId String
  bookingId  String   @unique
  rating     Int      // 1 to 5
  comment    String?
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  homestay   Homestay @relation(fields: [homestayId], references: [id])
  booking    Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)
}

enum Category {
  FARM_STAY
  ECO_LODGE
  TRADITIONAL_HOME
  MOUNTAIN_RETREAT
  LAKESIDE
  OTHER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum Role {
  USER
  HOST
  ADMIN
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./generated/erd/diagram.png"
}
